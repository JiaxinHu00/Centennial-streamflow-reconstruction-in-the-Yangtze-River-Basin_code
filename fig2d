rm(list = ls())
sta6_y_dis<-load("C:/Users/JX/Desktop/长江流域百年径流重建/年均值/sta6_y_mean.RData")
sta6_y_dis<-sta6_y_mean

# 使用apply函数计算每列的z-score
data_zscore <- apply(sta6_y_dis, 2, function(x) {
  (x - mean(x)) / sd(x)
})

# 打印结果
print(data_zscore)
colnames(data_zscore)<-factor(c("ZMD","LN","CT","YC","HK","DT"))
# summary_6sta_logi<-read.csv("C:/Users/JX/Desktop/绘制堆积条形图数据.csv")
# library(gcookbook)
# View(summary_6sta_logi)
# library(ggplot2)
# ggplot(summary_6sta_logi,aes(x=stations,y=value,fill=logi))+
#   geom_col()+
#   scale_y_continuous(expand = c(0,0),limits = c(0, 1452), breaks = seq(0, 1452, by = 100) )+#++
#   scale_fill_manual(values = c("#cceeff","#ffdddd"))+
#   guides(fill=FALSE)
# 
# write.csv(logi_of_z_s_less_than_0,file = "C:/Users/JX/Desktop/logi_of_z_s_less_than_0.csv")
# write.csv(cabbage_exp,file = "C:/Users/JX/Desktop/cabbage_exp.csv")
# write.csv(data_zscore_m,file = "C:/Users/JX/Desktop/data_zscore_m.csv")


# dates <- seq(as.Date("1901-01-01",format='%Y-%m-%d'), as.Date("2021-12-01",format='%Y-%m-%d'), by = "year")
year <- 1901:2021
heat.data<-data.frame(year,data_zscore)
long_heat.data<- reshape2::melt(heat.data, id.vars = "year")

# long_heat.data<-data.frame(
#   stations=as.numeric(ts_heat.data),
#   year= as.numeric(floor(time(ts_heat.data))),
#   z_score= as.numeric(cycle(ts_heat.data))
# )
###   创建时间序列   ###

# ts_heat.data <- ts(data_zscore,
#              start = 1901,
#              end = 2021,
#              frequency = 1) 
# plot(ts_heat.data)
# 定义变量的顺序
variable_order <- rev(levels(long_heat.data$variable))

# 将变量转换为有序因子
long_heat.data$variable <- factor(long_heat.data$variable, levels = variable_order)
# 将数据从宽格式转换为长格式

# 转置数据矩阵


# # 将 y 变量转换为因子，并指定因子水平顺序
# last_data$Index <- factor(data_zscore$Index, levels = unique(last_data$Index))
# transposed_data_matrix <- t(data_zscore)# 新建一个设备，并设置宽度和高度
###   plan3   ###

library(RColorBrewer)


colors<-brewer.pal(11,"RdBu")

heat.plot <- ggplot(long_heat.data, aes(x = year, y = variable, fill = value)) +
  geom_tile() +
  scale_x_continuous(expand = c(0, 0), breaks = seq(1901, 2021, by = 20)) +
  scale_y_discrete(expand = c(0, 0)) +
  scale_fill_gradientn(colours = colors, limits = c(-4, 4)) +
  theme(axis.line = element_line(color = "black")) +
  xlab(NULL) +
  ylab(NULL) +
  labs(fill = NULL )+
  theme(legend.key.size = unit(1, "lines"))

heat.plot


#####   "C:\Users\JX\Desktop\长江流域百年径流重建\图片\fig6a.png"
# 保存图像
ggsave(heat.plot,
       filename = "C:/Users/JX/Desktop/长江流域百年径流重建/图片/fig4.png", 
       width = 10,
       height = 2.6,
       dpi = 600)
